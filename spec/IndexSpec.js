var client = require('fakeredis').createClient(null, null, {fast: true});
var Model = require('../lib/Model.js');
var Index = require('../lib/Index.js');

function TestModel() {}
TestModel.properties = ['foo', 'bar'];
Model(TestModel, TestModel.properties, client);
Index(TestModel, "foo");

/**
 * The tests here are essentially a copy of the ModelSpec cases - they verify that the cached model works more or less like the plain model.
 *
 * @todo Verify that the data is actually saved to and retrieved from the cache.
 */
describe("Indexed Model class", function(done) {
  beforeEach(function(done) {
    TestModel.purge(done);
  });

  it("has an autogenerated getter", function() {
    expect(typeof(TestModel.getByFoo)).toBe("function");
  });

  it("saves and retrieves values by index", function(done) {
    var t = new TestModel();
    t.foo = "blah";
    t.bar = "asdf";
    t.save(function(err, res) {
      if (err) done(err);

      TestModel.getByFoo("blah", function(err, res) {
        expect(res.length).toBe(1);
        expect(res[0].foo = "blah");
        done();
      });
    });
  });

  it("updates index values", function(done) {
    var t = new TestModel();
    t.foo = "blah";
    t.bar = "asdf";
    t.save(function(err, res) {
      if (err) done(err);

      t.foo = "updated value";
      t.save(function(err, res) {
        if (err) done(err);

        TestModel.getByFoo("updated value", function(err, res) {
          if (err) done(err);

          expect(res.length).toBe(1);
          expect(res[0].foo).toBe("updated value");

          TestModel.getByFoo("blah", function(err, res) {
              if (err) done(err);

              expect(res.length).toBe(0);
              done();
          });
        });
      });
    });
  });
});
